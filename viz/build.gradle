apply from: rootProject.file("gradle/mpp-android.gradle")
apply from: rootProject.file("gradle/mpp-common.gradle")
apply from: rootProject.file("gradle/mpp-ios.gradle")
apply from: rootProject.file("gradle/mpp-jfx.gradle")
apply from: rootProject.file("gradle/mpp-js.gradle")
apply from: rootProject.file("gradle/dokka.gradle")

kotlin {
    sourceSets {
        commonMain {
            dependencies {
                api project(":d2v-color")
                api project(":d2v-core")
                api project(":d2v-timer")
            }
        }

    }

    if (include_ios.toBoolean()) {
        iosSimulatorArm64 {
            compilations.main {
                cinterops {
                    uikit {
                        //https://discuss.kotlinlang.org/t/library-from-swift-cinterop-doesnt-compile-with-xcode-13/23021
//                    extraOpts = ["-compiler-option", "-DNS_FORMAT_ARGUMENT(A)="]
                        compilerOpts '-DNS_FORMAT_ARGUMENT(A)='
                    }

                }
            }
        }
        iosArm64 { // Replace with a target you need.
            compilations.main {
                cinterops {
                    uikit {
                        //https://discuss.kotlinlang.org/t/library-from-swift-cinterop-doesnt-compile-with-xcode-13/23021
//                    extraOpts = ["-compiler-option", "-DNS_FORMAT_ARGUMENT(A)="]
                        compilerOpts '-DNS_FORMAT_ARGUMENT(A)='
                    }

                }
            }
        }
        iosX64 { // Replace with a target you need.
            compilations.main {
                cinterops {
                    uikit {
                        //https://discuss.kotlinlang.org/t/library-from-swift-cinterop-doesnt-compile-with-xcode-13/23021
//                    extraOpts = ["-compiler-option", "-DNS_FORMAT_ARGUMENT(A)="]
                        compilerOpts '-DNS_FORMAT_ARGUMENT(A)='
                    }

                }
            }
        }
    }
}
