pluginManagement {
    repositories {
        google()
//        jcenter()
        gradlePluginPortal()
        mavenCentral()
    }
    resolutionStrategy {
        eachPlugin {
            if (requested.id.namespace == 'com.android' || requested.id.name == 'kotlin-android-extensions') {
                useModule('com.android.tools.build:gradle:4.1.0')
            }
        }
    }
}

def d2v = [

        "axis",
        "chord",
        "color",
        "contour",
        "core",
        "delaunay",
        "dsv",
        "ease",
        "force",
        "format",
        "geo",
        "hexbin",
        "hierarchy",
        "interpolate",
        "quadtree",
        "random",
        "sankey",
        "scale",
        "shape",
        "tests",
        "tile",
        "time",
        "time-format",
        "timer",
        "transition",
        "viz",
        "voronoi"

]

System.setProperty("all_d2v", d2v.join(","))
d2v.forEach {
    println it
    def included = includeAndFilter(it)
    if (included)
        project(":$it").name = "d2v-${it}"

}


//if (include_js.toBoolean()) {
//    include ":site"
//}

def examples = [
//        ":app",
//
//        ":ex-delaunay",
//
//
]


rootProject.name = "d2v"

examples.forEach{
    def included = includeAndFilter(it)
    if (included)
        project(it).projectDir = "examples${it.replace(':', '/')}" as File
}

def includeAndFilter(project){
    if (project.endsWith("-android") || (project.endsWith("app"))) {
        if (include_android.toBoolean()) {
            include(":$project")
            return true
        }
        return false
    } else if (project.endsWith("-js")) {
        if (include_js.toBoolean()) {
            include(":$project")
            return true
        }
        return false
    } else if (project.endsWith("-jfx")) {
        if (include_jfx.toBoolean()) {
            include(":$project")
            return true
        }
        return false
    } else {
        include(":$project")
        return true
    }
}

